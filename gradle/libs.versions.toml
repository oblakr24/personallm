[versions]
agp = "8.4.1"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
#androidx-appcompat = "1.6.1"
#androidx-constraintlayout = "2.1.4"
#androidx-core-ktx = "1.13.1"
#androidx-espresso-core = "3.5.1"
#androidx-material = "1.12.0"
#androidx-test-junit = "1.1.5"

# Compose
composeTooling = "1.6.7"
compose-plugin = "1.6.11"
uiToolingPreviewDesktop = "1.6.7"

datastore = "1.1.1"
decompose = "3.0.0"
essenty = "2.0.0"

# Kotlin
kotlin = "2.0.0"
ksp = '2.0.0-1.0.21'
molecule = "2.0.0"

coroutines = "1.8.0"
kotlinxDatetime = "0.6.0"
kotlinxSerializationJson = "1.7.0-RC"

ktorfit = "1.14.0"
ktor = "2.3.11"

sqldelight = "2.0.2"

kotlinInject = '0.6.3'

#junit = "4.13.2"

[libraries]

androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }

coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }

arkivanov-decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
arkivanov-decompose-extensions = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
arkivanov-essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
arkivanov-essenty-state-keeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }

kotlinInject-compiler = { module = 'me.tatarka.inject:kotlin-inject-compiler-ksp', version.ref = 'kotlinInject' }
kotlinInject-runtime = { module = 'me.tatarka.inject:kotlin-inject-runtime', version.ref = 'kotlinInject' }

#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
#kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
#junit = { group = "junit", name = "junit", version.ref = "junit" }
#androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
#androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
#androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
#androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
#androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
#androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeTooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeTooling" }
androidx-ui-tooling-preview-desktop = { group = "androidx.compose.ui", name = "ui-tooling-preview-desktop", version.ref = "uiToolingPreviewDesktop" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }

essenty-lifecycle-coroutines = { module = "com.arkivanov.essenty:lifecycle-coroutines", version.ref = "essenty" }

molecule-runtime = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }
ktorfit = { id = 'de.jensklingenberg.ktorfit', version.ref = 'ktorfit' }
sqldelight = { id = 'app.cash.sqldelight', version.ref = 'sqldelight' }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
